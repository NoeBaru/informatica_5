/////////////////////////
ESERCIZI FABBRICA (N.3,4,5,10,11,12,13,14,15,20,21)
/////////////////////////

ES3

SELECT *
FROM sedeA
WHERE codOperaio = 'PLFR';

UPDATE sedeA
SET codR = 3
WHERE codOperaio = 'PLFR';

/////////

ES4

DELETE FROM responsabili
WHERE Cognome = "Lerda";
//non si può eliminare il padre perché i figli non possono rimanere orfani

//////////

ES5

SELECT *
FROM sedeA
WHERE codR = 1 OR codR = 2;

UPDATE sedeA
SET stipendio = stipendio + 30
WHERE codR = 1 OR codR = 2;


///////////

ES6
SELECT * FROM SedeA
INTERSECT
SELECT * FROM SedeB;

///////////

ES7
SELECT * FROM SedeA
UNION
SELECT * FROM SedeB;

///////////

ES8

///////////

ES10
SELECT *
FROM sedeA
WHERE codR = 1;

///////////

ES11
SELECT *
FROM sedeA
WHERE sesso = 'F' AND strftime('%Y', assuntoIl) = "2010";

///////////

ES12

SELECT *
FROM sedeB
WHERE stipendio < 900;

////////////

ES13
SELECT DISTINCT stipendio
FROM sedeB
WHERE sesso = 'M' ASC; //crescente asc e decrescente desc

////////////

ES14

SELECT codR
FROM sedeA
ORDER BYcodR


/////////////

ES15

SELECT codR, codOperaio
FROM sedeB

////////////

ES16

SELECT sedeA.*, cognome, nome //così prendo tutto di sedeA e solo le ultime due colonne di Responsabili senza ripetere così il codiceR
FROM sedeA, responsabili
WHERE codR = codResp;

////////////

ES17

SELECT *
FROM sedeB, responsabili;

////////////

ES20


////////////

ES21

SELECT cognome, nome
FROM responsabili, sedeA
WHERE codOperaio = 'UGUG' AND codR = codResp;

////////////

ES25

SELECT *
FROM SedeB
WHERE strftime('%Y', AssuntoIl) = '2011'
ORDER BY AssuntoIl DESC;

////////////

ES26

SELECT DISTINCT CodR
FROM SedeB
WHERE Stipendio < 980;

////////////

ES27

SELECT CodOperaio, AssuntoIl
FROM SedeB, responsabili
WHERE CodR = codResp AND Nome = 'Maria' AND Cognome = 'Fassa'
ORDER BY AssuntoIl ASC;

////////////

ES28
--Lo stipendio massimo degli operai della sede A, quello minimo e quello medio
SELECT MAX(stipendio) AS maxStipendio, MIN(stipendio) AS minStipendio, AVG(stipendio) AS mediaStipendo
FROM sedeA
WHERE sesso = 'M'

////////////

ES29
--Contare gli operai/e della sede B con responsabile di codice X inserito da tastiera
SELECT COUNT(*) AS numResp3 --conta le righe non nulla, quindi si fa prima a mettere * se sono sicura che non ci siano nulli
FROM sedeB
WHERE codR = 3

////////////

ES30
--Contare le operaie della sede A con responsabile il cui nome e cognome viene inserito da tastiera
SELECT COUNT(*) AS numoOperaieCercate
FROM sedeA, responsabili
WHERE sesso = 'F'
AND codR = codResp
AND cognome LIKE "%Fassa%"
AND nome LIKE "%Maria%"

////////////

ES31
--per ogni responsabile della sede B elencare il numero di operai/e e lo stipendio medio
SELECT COUNT(*) AS numOpResp1, AVG(stipendio)
FROM sedeB
WHERE codR = 1
UNION
SELECT COUNT(*) AS numOpResp2, AVG(stipendio)
FROM sedeB
WHERE codR = 2
UNION
SELECT COUNT(*) AS numOpResp3, AVG(stipendio)
FROM sedeB
WHERE codR = 3

SELECT cognome, nome, COUNT(*) AS numOpResp, AVG(stipendio)
FROM sedeB, responsabili
WHERE codR = codResp
GOURP BY cognome, nome, codResp

////////////

ES32
--per ogni stipendio elencare il numero di operai/e della sede A
SELECT COUNT(*)
FROM sedeA
GROUP BY stipendio 

////////////

ES33
--elenco degli operai della sede A in ordine decrescente di assunzione che hanno come responsabile “Lerda Ivo”
SELECT codOperaio
FROM sedeA, responsabili
WHERE codR = codResp
AND cognome LIKE "%Lerda%" AND nome LIKE "%Ivo%"
ORDER BY assuntoIl DESC

////////////

ES34
--il numero e lo stipendio massimo delle operaie della sede B il cui responsabile è inserito da tastiera (cognome e nome) (fai la tabella per “Dutto Luca”)
SELECT COUNT(stipendio) AS numStipendi, MAX(stipendio) AS maxStipendio
FROM sedeB, responsabili
WHERE codR = codResp
AND cognome LIKE "%Dutto%"
AND nome LIKE "%Luca%"
AND sesso = 'F'









